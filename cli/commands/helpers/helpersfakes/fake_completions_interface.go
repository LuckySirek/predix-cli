// This file was generated by counterfeiter
package helpersfakes

import (
	"sync"

	"github.build.ge.com/adoption/predix-cli/cli/commands/helpers"
	"github.com/urfave/cli"
)

type FakeCompletionsInterface struct {
	PrintFlagsStub        func(c *cli.Context, flags []cli.Flag)
	printFlagsMutex       sync.RWMutex
	printFlagsArgsForCall []struct {
		c     *cli.Context
		flags []cli.Flag
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeCompletionsInterface) PrintFlags(c *cli.Context, flags []cli.Flag) {
	var flagsCopy []cli.Flag
	if flags != nil {
		flagsCopy = make([]cli.Flag, len(flags))
		copy(flagsCopy, flags)
	}
	fake.printFlagsMutex.Lock()
	fake.printFlagsArgsForCall = append(fake.printFlagsArgsForCall, struct {
		c     *cli.Context
		flags []cli.Flag
	}{c, flagsCopy})
	fake.recordInvocation("PrintFlags", []interface{}{c, flagsCopy})
	fake.printFlagsMutex.Unlock()
	if fake.PrintFlagsStub != nil {
		fake.PrintFlagsStub(c, flags)
	}
}

func (fake *FakeCompletionsInterface) PrintFlagsCallCount() int {
	fake.printFlagsMutex.RLock()
	defer fake.printFlagsMutex.RUnlock()
	return len(fake.printFlagsArgsForCall)
}

func (fake *FakeCompletionsInterface) PrintFlagsArgsForCall(i int) (*cli.Context, []cli.Flag) {
	fake.printFlagsMutex.RLock()
	defer fake.printFlagsMutex.RUnlock()
	return fake.printFlagsArgsForCall[i].c, fake.printFlagsArgsForCall[i].flags
}

func (fake *FakeCompletionsInterface) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.printFlagsMutex.RLock()
	defer fake.printFlagsMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeCompletionsInterface) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ helpers.CompletionsInterface = new(FakeCompletionsInterface)
